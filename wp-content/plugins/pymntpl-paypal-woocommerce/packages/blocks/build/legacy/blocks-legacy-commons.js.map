{"version":3,"file":"blocks-legacy-commons.js","mappings":"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","sources":["webpack://wcPPCP/./packages/blocks/assets/js/components/PaymentMethodCard.js","webpack://wcPPCP/./packages/blocks/assets/js/components/fastlane-modal/index.js","webpack://wcPPCP/./packages/blocks/assets/js/utils.js","webpack://wcPPCP/./packages/blocks/assets/js/legacy/hooks/use-payment-method-notices.js","webpack://wcPPCP/./packages/blocks/assets/js/legacy/hooks/use-process-payment-failure.js","webpack://wcPPCP/./packages/blocks/assets/js/legacy/hooks/use-breakpoint-width.js","webpack://wcPPCP/./packages/blocks/assets/js/legacy/payment-methods/paypal/simple-paypal.js","webpack://wcPPCP/./packages/blocks/assets/js/legacy/payment-methods/paypal/hooks/use-paypal-options.js","webpack://wcPPCP/./packages/blocks/assets/js/legacy/payment-methods/paypal/hooks/use-paypal-funding-sources.js","webpack://wcPPCP/./packages/blocks/assets/js/legacy/payment-methods/paypal/hooks/use-process-payment.js","webpack://wcPPCP/./packages/blocks/assets/js/legacy/payment-methods/paypal/index.js","webpack://wcPPCP/./packages/blocks/assets/js/legacy/payment-methods/paypal/hooks/use-validate-checkout.js","webpack://wcPPCP/./packages/blocks/assets/js/legacy/hooks/use-load-paypal-script.js","webpack://wcPPCP/./node_modules/classnames/index.js"],"sourcesContent":["export const PaymentMethodCard = (\n    {\n        label,\n        icon,\n        description,\n        onCancel\n    }) => {\n    return (\n        <div className={'wc-ppcp-components-payment-card__container'}>\n            <div className={'wc-ppcp-components-payment-card__card'}>\n                <img\n                    className={'wc-ppcp-components-payment-card__icon'}\n                    alt={icon.alt}\n                    src={icon.src}/>\n                <div className={'wc-ppcp-components-payment-card__description'}>\n                    <span>{description}</span>\n                </div>\n            </div>\n            <div\n                className={'wc-ppcp-components-payment-card-cancel__container'}>\n                <span\n                    className={'wc-ppcp-components-payment-card-cancel__label'}\n                    onClick={onCancel}\n                    onClick={onCancel}>{label}</span>\n            </div>\n        </div>\n    )\n}","import {useEffect, useState, useRef, useCallback} from '@wordpress/element';\nimport classnames from 'classnames';\n\nexport const FastlaneModal = (\n    {\n        i18n,\n        open,\n        onClose,\n        fastlane,\n        onTokenize,\n        shippingData\n    }) => {\n    const [rendered, setRendered] = useState(false);\n    const currentData = useRef({fastlane, shippingData});\n\n    const onClick = useCallback(async (e) => {\n        e.preventDefault();\n        try {\n            const {\n                paymentComponent\n            } = currentData.current;\n\n            const response = await paymentComponent.getPaymentToken();\n\n            // call onTokenize\n            onTokenize(response);\n\n            // close modal\n            onClose(true);\n            setRendered(false);\n        } catch (error) {\n            console.log('Error tokenizing payment method. ', error);\n        }\n    }, []);\n\n    useEffect(() => {\n        currentData.current = {\n            ...currentData.current,\n            fastlane,\n            shippingData\n        };\n    }, [fastlane, shippingData]);\n\n    useEffect(() => {\n        if (open) {\n            const {\n                fastlane,\n                shippingData\n            } = currentData.current;\n            const {\n                needsShipping,\n                shippingAddress\n            } = shippingData;\n            const props = {\n                ...(needsShipping && {\n                    shippingAddress: {\n                        firstName: shippingAddress.first_name || '',\n                        lastName: shippingAddress.last_name || '',\n                        streetAddress: shippingAddress.address_1 || '',\n                        extendedAddress: shippingAddress.address_2 || '',\n                        locality: shippingAddress.city || '',\n                        region: shippingAddress.state || '',\n                        postalCode: shippingAddress.postcode || '',\n                        countryCodeAlpha2: shippingAddress.country || '',\n                        phoneNumber: shippingAddress.phone || '',\n                    }\n                })\n            }\n            fastlane.FastlanePaymentComponent(props).then(async instance => {\n                currentData.current.paymentComponent = instance;\n                await instance.render('.wc-ppcp-fastlane-modal-body');\n                document.body.classList.add('fastlane-modal-open');\n                setTimeout(() => {\n                    setRendered(true);\n                }, 250);\n            });\n        } else {\n            document.body.classList.remove('fastlane-modal-open');\n        }\n\n        return () => document.body.classList.remove('fastlane-modal-open');\n    }, [open]);\n\n    return (\n        <div className={classnames('wc-ppcp-fastlane-overlay', {'active': rendered})}>\n            <div className=\"wc-ppcp-fastlane-modal\">\n                <div className=\"wc-ppcp-fastlane-modal-body\">\n\n                </div>\n                <div className=\"wc-ppcp-fastlane-modal-buttons\">\n                    <button\n                        className=\"wc-ppcp-fastlane-tokenize\"\n                        onClick={onClick}>\n                        {i18n.continue}\n                    </button>\n                    <a\n                        className=\"wc-ppcp-fastlane-cancel\"\n                        onClick={() => {\n                            setRendered(false);\n                            onClose();\n                        }}>\n                        {i18n.cancel}\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}","import {SHIPPING_OPTION_REGEX} from '@ppcp/utils';\nimport {getSetting} from '@woocommerce/settings';\n\nexport const getShippingOptionId = (packageId, rateId) => `${packageId}:${rateId}`;\n\nexport const getSelectedShippingOptionId = (shippingRates) => {\n    let shippingOption = '';\n    shippingRates.forEach((shippingPackage, idx) => {\n        shippingPackage.shipping_rates.forEach(rate => {\n            if (rate.selected) {\n                shippingOption = getShippingOptionId(idx, rate.rate_id);\n            }\n        });\n    });\n    return shippingOption;\n}\n\nexport const extractShippingRateParams = (id) => {\n    const result = id.match(SHIPPING_OPTION_REGEX);\n    if (result) {\n        const {1: packageIdx, 2: rate} = result;\n        return [rate, packageIdx];\n    }\n    return [];\n}\n\nexport const removeNumberPrecision = (value, unit) => {\n    return value / 10 ** unit;\n}\n\nexport const hasShippingOptions = (shippingRates) => shippingRates.map(rate => rate?.shipping_rates.length > 0).filter(Boolean).length > 0;\n\n/**\n * Returns a rest route in ajax form given a route path.\n * @param path\n * @returns {*}\n */\nexport const getRestPath = (path) => {\n    path = path.replace(/^\\//, '');\n    return getSetting('ppcpGeneralData')?.ajaxRestPath?.replace('%s', path);\n}\n\nexport const isUserAdmin = () => getSetting('ppcpGeneralData')?.isAdmin\n\nconst getLocaleFields = (country) => {\n    const countryLocale = getSetting('countryLocale', {});\n    let localeFields = {...countryLocale.default};\n    if (country && countryLocale.hasOwnProperty(country)) {\n        localeFields = Object.entries(countryLocale[country]).reduce((locale, [key, value]) => {\n            locale[key] = {...locale[key], ...value}\n            return locale;\n        }, localeFields);\n    }\n    return localeFields;\n}\n\n/**\n * Returns true if the provided value is empty.\n * @param value\n * @returns {boolean}\n */\nconst isEmpty = (value) => {\n    if (typeof value === 'string') {\n        return value.length == 0 || value == '';\n    }\n    if (Array.isArray(value)) {\n        return array.length == 0;\n    }\n    if (typeof value === 'object') {\n        return Object.keys(value).length == 0;\n    }\n    if (typeof value === 'undefined') {\n        return true;\n    }\n    return true;\n}\n\nexport const isCartPage = () => {\n    return getSetting('ppcpGeneralData').context === 'cart';\n}\n\nexport const isCheckoutPage = () => {\n    return getSetting('ppcpGeneralData').context === 'checkout';\n}\n\nexport const isAdminOnly = () => {\n    return getSetting('ppcpGeneralData').adminOnly === true;\n}\n\nexport const DEFAULT_SHIPPING_ADDRESS = {\n    'first_name': '',\n    'last_name': '',\n    'company': '',\n    'address_1': '',\n    'address_2': '',\n    'city': '',\n    'state': '',\n    'postcode': '',\n    'country': '',\n    'phone': '',\n}\n\nexport const DEFAULT_BILLING_ADDRESS = {\n    ...DEFAULT_SHIPPING_ADDRESS,\n    'email': ''\n}\n\nexport const i18n = getSetting('ppcpGeneralData').i18n;","import {useState, useCallback} from '@wordpress/element';\n\nexport const usePaymentMethodNotices = () => {\n    const [notices, setNotices] = useState([]);\n\n    const addNotice = useCallback((message, options, type) => {\n        setNotices(prevNotices => {\n            const {isDismissable = true} = options;\n            const notice = {\n                message,\n                options,\n                type\n            }\n            return [...prevNotices, notice];\n        });\n    }, []);\n\n    const addErrorNotice = useCallback((message, options = {}) => {\n        addNotice(message, options, 'error');\n    }, [addNotice]);\n\n    const addSuccessNotice = useCallback((message, options = {}) => {\n        addNotice(message, options, 'success');\n    }, [addNotice]);\n\n    const addInfoNotice = useCallback((message, options = {}) => {\n        addNotice(message, options, 'info');\n    }, [addNotice]);\n\n    return {\n        addErrorNotice,\n        addSuccessNotice,\n        addInfoNotice\n    }\n}","import {useEffect} from '@wordpress/element';\n\nexport const useProcessPaymentFailure = ({event, responseTypes, messageContext = null, setPaymentData}) => {\n    useEffect(() => {\n        const unsubscribe = event((data) => {\n            if (data?.processingResponse?.paymentDetails?.ppcpErrorMessage) {\n                setPaymentData(null);\n                const message = data.processingResponse.paymentDetails.ppcpErrorMessage;\n                return {\n                    type: responseTypes.ERROR,\n                    retry: true,\n                    message,\n                    messageContext\n                }\n            }\n            return null;\n        });\n        return () => {\n            unsubscribe();\n        };\n    }, [event]);\n}\n\nexport default useProcessPaymentFailure;","import {useState, useEffect, useRef} from '@wordpress/element';\n\nexport const useBreakpointWidth = ({width, node, className = 'wc-ppcp-sm__container'}) => {\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n    const [element, setElement] = useState(node);\n    useEffect(() => {\n        setElement(node);\n    }, [node]);\n\n    useEffect(() => {\n        const handleResize = () => setWindowWidth(window.innerWidth);\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    useEffect(() => {\n        if (element) {\n            if (element.clientWidth <= width) {\n                element.classList.add(className);\n            } else {\n                element.classList.remove(className);\n            }\n        }\n    }, [windowWidth, width, element]);\n}","import {useState, useEffect, useCallback} from '@wordpress/element';\nimport {PaymentMethodCard} from \"../../../components\";\nimport {i18n} from \"../../../utils\";\nimport {useProcessPaymentFailure} from \"../../hooks\";\n\nconst SimplePayPal = (props) => {\n    return (\n        <PayPalRedirectNotice {...props}/>\n    )\n}\n\nconst PayPalRedirectNotice = (\n    {\n        data,\n        eventRegistration,\n        activePaymentMethod,\n        emitResponse,\n        ...props\n    }) => {\n    const {onPaymentSetup, onCheckoutFail} = eventRegistration;\n    const {responseTypes, noticeContexts} = emitResponse;\n    const [paymentData, setPaymentData] = useState(data('paymentData'));\n\n    const clearPaymentData = useCallback(() => {\n        setPaymentData(null);\n    }, []);\n\n    useProcessPaymentFailure({\n        event: onCheckoutFail,\n        responseTypes,\n        messageContext: noticeContexts.CHECKOUT,\n        setPaymentData\n    });\n\n    useEffect(() => {\n        if (activePaymentMethod === 'ppcp' && paymentData) {\n            const unsubscribe = onPaymentSetup(() => {\n                const {orderId = '', billingToken = ''} = paymentData;\n                const response = {\n                    meta: {\n                        paymentMethodData: {\n                            ppcp_paypal_order_id: orderId,\n                            ppcp_billing_token: billingToken\n                        }\n                    }\n                }\n                return {\n                    type: responseTypes.SUCCESS,\n                    ...response\n                };\n            });\n            return unsubscribe;\n        }\n    }, [\n        paymentData,\n        responseTypes,\n        onPaymentSetup,\n        activePaymentMethod\n    ]);\n\n    if (paymentData && paymentData?.order) {\n        if (paymentData.billingTokenData) {\n            return (\n                <PaymentMethodCard\n                    description={paymentData.billingTokenData.payer_info.email}\n                    icon={data('icons').find(icon => icon.id === 'paypal_simple')}\n                    label={i18n.cancel}\n                    onCancel={clearPaymentData}/>\n            );\n        }\n        return (\n            <PaymentMethodCard\n                description={paymentData.order.payer.email_address}\n                icon={data('icons').find(icon => icon.id === 'paypal_simple')}\n                label={i18n.cancel}\n                onCancel={clearPaymentData}/>\n        )\n    }\n\n    return (\n        <div className=\"wc-ppcp-popup__container\">\n            <img src={data('redirectIcon')}/>\n            <p dangerouslySetInnerHTML={{__html: data('i18n').redirectText}}/>\n        </div>\n    )\n}\n\nexport default SimplePayPal;","import {useEffect, useCallback, useRef} from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\nimport {convertPayPalAddressToCart, extractShippingMethod} from \"@ppcp/utils\";\nimport {\n    extractShippingRateParams,\n    getRestPath,\n    i18n\n} from '../../../../utils';\n\nexport const usePayPalOptions = (\n    {\n        isExpress,\n        paypal,\n        vault,\n        buttonStyles,\n        shippingData,\n        billing,\n        setError,\n        setPaymentData,\n        onClick,\n        onClose\n    }) => {\n    const currentShippingData = useRef(shippingData);\n    const currentBilling = useRef(billing);\n    const currentData = useRef({onClick, onClose, buttonState: true, actions: {}, error: null});\n    useEffect(() => {\n        currentShippingData.current = shippingData;\n        currentBilling.current = billing;\n        currentData.current = {...currentData.current, onClick, onClose};\n    });\n\n    const disableButtons = useCallback(() => {\n        Object.keys(currentData.current.actions).forEach(key => {\n            currentData.current.actions[key].disable();\n            currentData.current.buttonState = false;\n        });\n    }, []);\n\n    const getOptions = useCallback(fundingSource => {\n        const {needsShipping, shippingAddress} = currentShippingData.current;\n        const billingAddress = billing.billingData;\n        const options = {\n            fundingSource: fundingSource,\n            style: getButtonStyle(fundingSource),\n            onApprove,\n            onError\n        };\n        if (isExpress) {\n            options.onClick = () => currentData.current.onClick();\n            options.onCancel = () => currentData.current.onClose()\n        } else {\n            options.onClick = () => {\n                // if address is not valid, show a notification that address data must be filled out first\n                if (!isExpress && !currentData.current.buttonState) {\n                    if (needsShipping) {\n                        setError(i18n.order_missing_address);\n                    } else {\n                        setError(i18n.order_missing_billing_address);\n                    }\n                }\n            }\n        }\n        options.onInit = (data, actions) => {\n            if (!isExpress) {\n                currentData.current.actions[fundingSource] = actions;\n            }\n        }\n        if (isCheckoutFlow()) {\n            options.createOrder = createOrder;\n            if (isExpress && needsShipping && fundingSource !== 'venmo') {\n                options.onShippingChange = onShippingChange;\n            }\n        } else {\n            options.createBillingAgreement = createBillingAgreement;\n        }\n\n        return options;\n    }, [\n        paypal,\n        isExpress,\n        onApprove,\n        onError,\n        createOrder,\n        createBillingAgreement,\n        onShippingChange,\n        setError\n    ]);\n\n    const getButtonStyle = useCallback(fundingSource => {\n        let styles = {};\n        switch (fundingSource) {\n            case paypal.FUNDING.PAYPAL:\n                styles = buttonStyles.paypal;\n                break;\n            case paypal.FUNDING.PAYLATER:\n                styles = buttonStyles.paylater;\n                break;\n            case paypal.FUNDING.CREDIT:\n                const colors = ['black', 'white'];\n                const color = colors.includes(buttonStyles.paylater.color) ? buttonStyles.paylater.color : 'darkblue';\n                styles = {...buttonStyles.paylater, color};\n                break;\n            case paypal.FUNDING.CARD:\n                styles = buttonStyles.card;\n                if (styles.tagline) {\n                    delete styles.tagline;\n                    styles.layout = 'vertical';\n                } else {\n                    styles.layout = 'horizontal';\n                    delete styles.tagline;\n                }\n                break;\n            case paypal.FUNDING.VENMO:\n                styles = buttonStyles.venmo;\n                break;\n        }\n        return styles;\n    }, [paypal, buttonStyles]);\n\n    const isCheckoutFlow = useCallback(() => !vault, [vault]);\n\n    const handleBillingToken = useCallback(async (billingToken) => {\n        try {\n            return apiFetch({\n                method: 'GET',\n                path: `/wc-ppcp/v1/billing-agreement/token/${billingToken}`\n            });\n        } catch (error) {\n            throw error;\n        }\n    }, []);\n\n    const onApprove = useCallback(async (data, actions) => {\n        const paymentData = {\n            order: {},\n            orderId: data.orderID,\n            billingToken: data.billingToken || '',\n            billingTokenData: null\n        }\n        if (data.billingToken) {\n            try {\n                paymentData.billingTokenData = await handleBillingToken(data.billingToken);\n                setPaymentData(paymentData);\n            } catch (error) {\n                setError(error);\n            }\n        } else {\n            actions.order.get().then(response => {\n                setPaymentData({...paymentData, order: response});\n            }).catch(error => {\n                setError(error);\n            });\n        }\n    }, [setError, handleBillingToken]);\n\n    const onShippingChange = useCallback((data, actions) => {\n        const shippingData = currentShippingData.current;\n        const {setSelectedRates} = shippingData;\n        const intermediateAddress = convertPayPalAddressToCart(data?.shipping_address || {}, true);\n        const selectedShippingOption = data?.selected_shipping_option?.id || '';\n        return apiFetch({\n            method: 'POST',\n            url: getRestPath('wc-ppcp/v1/cart/shipping'),\n            data: {\n                order_id: data.orderID,\n                address: intermediateAddress,\n                shipping_method: extractShippingMethod(selectedShippingOption),\n                payment_method: 'ppcp'\n            }\n        }).then(response => {\n            if (response.code) {\n                return actions.reject();\n            } else {\n                return actions.resolve();\n            }\n        }).catch(error => {\n            return actions.reject();\n        }).finally(() => {\n            if (selectedShippingOption) {\n                setSelectedRates(...extractShippingRateParams(selectedShippingOption))\n            }\n        })\n    }, []);\n\n    const onError = useCallback(error => {\n        if (error?.message?.indexOf('Window is closed') > -1) {\n            return;\n        }\n        if (currentData.current.error) {\n            if (currentData.current.error?.code === 'validation_errors') {\n                return setError(currentData.current.error.data.errors[0]);\n            } else {\n                return setError(currentData.current.error.message);\n            }\n        }\n        if (error?.code === 'validation_errors') {\n            setError(error.data.errors[0]);\n        } else {\n            setError(error);\n        }\n    }, [setError]);\n\n    const createOrder = useCallback(async (data, actions) => {\n        const {needsShipping, shippingAddress} = currentShippingData.current;\n        const {billingAddress, email} = currentBilling.current;\n        try {\n            const response = await apiFetch({\n                method: 'POST',\n                url: getRestPath('wc-ppcp/v1/cart/order'),\n                data: {\n                    payment_method: 'ppcp',\n                    address_provided: !isExpress && needsShipping,\n                    checkout_blocks: true,\n                    context: !isExpress ? 'checkout' : 'express',\n                    ...(needsShipping ? {\n                        shipping_first_name: shippingAddress.first_name,\n                        shipping_last_name: shippingAddress.last_name,\n                        shipping_address_1: shippingAddress.address_1,\n                        shipping_address_2: shippingAddress.address_2,\n                        shipping_postcode: shippingAddress.postcode,\n                        shipping_city: shippingAddress.city,\n                        shipping_state: shippingAddress.state,\n                        shipping_country: shippingAddress.country\n                    } : null),\n                    ...{\n                        billing_first_name: billingAddress.first_name,\n                        billing_last_name: billingAddress.last_name,\n                        billing_address_1: billingAddress.address_1,\n                        billing_address_2: billingAddress.address_2,\n                        billing_postcode: billingAddress.postcode,\n                        billing_city: billingAddress.city,\n                        billing_state: billingAddress.state,\n                        billing_country: billingAddress.country,\n                        billing_email: billingAddress.email,\n                        billing_phone: billingAddress.phone,\n                        billing_company: billingAddress.company\n                    }\n                }\n            });\n            return response;\n        } catch (error) {\n            throw error;\n        }\n    }, []);\n\n    const createBillingAgreement = useCallback((data, actions) => {\n        const {needsShipping, shippingAddress} = currentShippingData.current;\n        const {billingAddress, email} = currentBilling.current;\n        return apiFetch({\n            method: 'POST',\n            url: getRestPath('/wc-ppcp/v1/billing-agreement/token'),\n            data: {\n                context: !isExpress ? 'checkout' : null,\n                payment_method: 'ppcp',\n                ...(needsShipping ? {\n                    shipping_first_name: shippingAddress.first_name,\n                    shipping_last_name: shippingAddress.last_name,\n                    shipping_address_1: shippingAddress.address_1,\n                    shipping_address_2: shippingAddress.address_2,\n                    shipping_postcode: shippingAddress.postcode,\n                    shipping_city: shippingAddress.city,\n                    shipping_state: shippingAddress.state,\n                    shipping_country: shippingAddress.country\n                } : null),\n                ...{\n                    billing_first_name: billingAddress.first_name,\n                    billing_last_name: billingAddress.last_name,\n                    billing_address_1: billingAddress.address_1,\n                    billing_address_2: billingAddress.address_2,\n                    billing_postcode: billingAddress.postcode,\n                    billing_city: billingAddress.city,\n                    billing_state: billingAddress.state,\n                    billing_country: billingAddress.country,\n                    billing_email: billingAddress.email,\n                    billing_phone: billingAddress.phone,\n                    billing_company: billingAddress.company\n                }\n            }\n        }).then(token => {\n            return token;\n        }).catch(error => {\n            currentData.current.error = error;\n        });\n    }, [isExpress, setError]);\n\n    return {getOptions};\n}","import {useEffect, useState} from '@wordpress/element';\n\nexport const usePayPalFundingSources = ({data, paypal, context, vault = false}) => {\n    const [sources, setSources] = useState(false);\n    useEffect(() => {\n        if (paypal) {\n            let sources = [];\n            const buttonOrder = data('buttonOrder', []);\n            if (context === 'express_checkout') {\n                if (data('paypalSections', []).includes(context)) {\n                    sources.push(paypal.FUNDING.PAYPAL);\n                }\n            } else {\n                sources.push(paypal.FUNDING.PAYPAL);\n            }\n            if (data('payLaterEnabled') && data('payLaterSections', []).includes(context)) {\n                if (vault) {\n                    sources.push(paypal.FUNDING.CREDIT)\n                } else {\n                    sources.push(paypal.FUNDING.PAYLATER)\n                }\n            }\n            if (data('cardEnabled') && data('creditCardSections', []).includes(context)) {\n                sources.push(paypal.FUNDING.CARD)\n            }\n            if (data('venmoEnabled') && data('venmoSections', []).includes(context)) {\n                sources.push(paypal.FUNDING.VENMO);\n            }\n            sources.sort((a, b) => {\n                return buttonOrder.indexOf(a) < buttonOrder.indexOf(b) ? -1 : 1;\n            });\n            setSources([...sources]);\n        }\n    }, [paypal]);\n\n    return sources;\n}","import {useState, useEffect, useRef, useCallback} from '@wordpress/element';\nimport {convertPayPalAddressToCart, extractFullName} from \"@ppcp/utils\";\nimport {isEmpty} from 'lodash';\nimport {\n    DEFAULT_BILLING_ADDRESS,\n    DEFAULT_SHIPPING_ADDRESS\n} from \"../../../../utils\";\n\nexport const useProcessPayment = (\n    {\n        isExpress,\n        onSubmit,\n        billingAddress,\n        shippingData,\n        onPaymentSetup,\n        responseTypes,\n        activePaymentMethod,\n        paymentMethodId\n    }) => {\n    const [paymentData, updatePaymentData] = useState(null);\n    const currentPaymentData = useRef(null);\n    const currentBillingAddress = useRef(null);\n    const currentShippingData = useRef(null);\n\n    const setPaymentData = useCallback((value, submit = true) => {\n        if (value === null || value === '') {\n            updatePaymentData(null);\n        } else {\n            updatePaymentData({...value, submit});\n        }\n    }, []);\n\n    const clearPaymentData = useCallback(() => {\n        updatePaymentData(null);\n    }, []);\n\n    useEffect(() => {\n        currentPaymentData.current = paymentData;\n        currentBillingAddress.current = billingAddress;\n        currentShippingData.current = shippingData;\n    });\n\n    useEffect(() => {\n        if (!isEmpty(paymentData) && paymentData.submit) {\n            onSubmit();\n        }\n    }, [paymentData, onSubmit]);\n\n    const convertOrderDataToAddress = useCallback((order) => {\n        const {needsShipping} = currentShippingData.current;\n        let address = {};\n        if (!isEmpty(order?.payer?.address?.address_line_1)) {\n            address = convertPayPalAddressToCart(order.payer.address);\n        } else if (needsShipping && !isEmpty(order?.purchase_units?.[0]?.shipping)) {\n            const shipping = order.purchase_units[0].shipping;\n            address = convertPayPalAddressToCart(shipping.address);\n        }\n        if (order?.payer?.name) {\n            address = {...address, ...extractName(order.payer.name)};\n        }\n        if (order?.payer?.email_address && isExpress) {\n            // only override email address if express checkout is being used\n            address = {...address, email: order.payer.email_address};\n        }\n        if (order?.payer?.phone?.phone_number?.national_number) {\n            address = {...address, phone: order.payer.phone.phone_number.national_number};\n        }\n        return address;\n    }, []);\n\n    const convertBillingTokenToAddress = useCallback((data, type = 'billing') => {\n        let address = {};\n        const {needsShipping} = currentShippingData.current;\n        if (type === 'billing') {\n            if (data?.payer_info?.billing_address) {\n                address = convertPayPalAddressToCart(data.payer_info.billing_address);\n            }\n        } else {\n            if (needsShipping && data.shipping_address) {\n                address = convertPayPalAddressToCart(data.shipping_address);\n            }\n        }\n        if (data?.payer_info?.first_name) {\n            address = {...address, first_name: data.payer_info.first_name};\n        }\n        if (data?.payer_info?.last_name) {\n            address = {...address, last_name: data.payer_info.last_name};\n        }\n        if (data?.payer_info?.email && isExpress) {\n            address = {...address, email: data.payer_info.email};\n        }\n        if (data?.payer_info?.phone) {\n            address = {...address, phone: data.payer_info.phone};\n        }\n        return address;\n    }, []);\n\n    const extractName = useCallback((name) => {\n        let first_name, last_name;\n        if (Array.isArray(name)) {\n            [first_name, last_name] = name;\n        } else {\n            ({given_name: first_name, surname: last_name} = name);\n        }\n        return {first_name, last_name};\n    }, []);\n\n    const convertShippingAddress = useCallback(order => {\n        let address = {};\n        if (order?.purchase_units?.[0]?.shipping) {\n            const shipping = order.purchase_units[0].shipping;\n            address = convertPayPalAddressToCart(shipping.address);\n            if (shipping?.name?.full_name) {\n                const name = extractFullName(shipping.name.full_name);\n                address = {...address, ...extractName(name)};\n            }\n        }\n        return address;\n    }, []);\n\n    useEffect(() => {\n        if (activePaymentMethod === paymentMethodId) {\n            const unsubscribe = onPaymentSetup(() => {\n                const billingAddress = currentBillingAddress.current;\n                const shippingData = currentShippingData.current;\n                const {shippingAddress, needsShipping} = shippingData;\n                const {orderId, billingToken, billingTokenData = null, order = {}} = currentPaymentData.current;\n                const response = {\n                    meta: {\n                        paymentMethodData: {\n                            ppcp_paypal_order_id: orderId,\n                            ppcp_billing_token: billingToken\n                        },\n                        ...(isExpress && {\n                            billingAddress: {\n                                ...DEFAULT_BILLING_ADDRESS,\n                                ...billingAddress,\n                                ...convertOrderDataToAddress(order),\n                                ...(billingTokenData && convertBillingTokenToAddress(billingTokenData))\n                            }\n                        })\n                    }\n                }\n                if (needsShipping && isExpress) {\n                    response.meta.shippingAddress = {\n                        ...DEFAULT_SHIPPING_ADDRESS,\n                        ...shippingAddress,\n                        ...convertShippingAddress(order),\n                        ...(billingTokenData && convertBillingTokenToAddress(billingTokenData, 'shipping'))\n                    }\n                }\n                return {type: responseTypes.SUCCESS, ...response};\n            });\n\n            return () => unsubscribe();\n        }\n    }, [\n        isExpress,\n        onPaymentSetup,\n        activePaymentMethod\n    ]);\n\n    return {\n        paymentData,\n        setPaymentData,\n        clearPaymentData\n    };\n}","import {useState, useCallback, useEffect} from '@wordpress/element';\nimport {registerPaymentMethod, registerExpressPaymentMethod} from '@woocommerce/blocks-registry';\nimport {getSetting} from '@woocommerce/settings';\nimport {dispatch} from '@wordpress/data';\nimport SimplePayPal from './simple-paypal';\nimport {useBreakpointWidth, useLoadPayPalScript} from \"../../hooks\";\nimport {usePayPalOptions, usePayPalFundingSources, useProcessPayment, useValidateCheckout} from \"./hooks\";\nimport {PaymentMethodCard} from \"../../../components\";\nimport './styles.scss';\nimport {useProcessPaymentFailure} from \"../../hooks\";\nimport {isAdminOnly, isCartPage, isCheckoutPage, i18n} from \"../../../utils\";\n\nconst getData = (key) => {\n    const data = getSetting(key);\n    return (key, defaultValue = null) => {\n        if (!data.hasOwnProperty(key)) {\n            data[key] = defaultValue;\n        }\n        return data[key];\n    };\n}\n\nconst data = getData('ppcp_data');\nconst generalData = getData('ppcpGeneralData');\n\nconst isExpressEnabled = () => {\n    const sections = ['paypalSections', 'payLaterSections', 'creditCardSections', 'venmoSections'];\n    for (const section of sections) {\n        if (data(section, []).includes('express_checkout')) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconst isCartEnabled = () => data('paypalSections').includes('cart');\n\nconst ExpressPaymentMethod = ({context = 'express_checkout', ...props}) => {\n    return <PayPalPaymentMethod\n        context={context}\n        isExpress={true}\n        paymentMethodId='paymentplugins_ppcp_express'\n        {...props}/>;\n}\n\nconst PayPalPaymentMethod = (\n    {\n        isExpress = false,\n        context,\n        billing,\n        shippingData,\n        eventRegistration,\n        emitResponse,\n        onError,\n        onClick,\n        onClose,\n        onSubmit,\n        activePaymentMethod,\n        paymentMethodId,\n        ...props\n    }) => {\n    const queryParams = getSetting('paypalQueryParams');\n    const vault = queryParams.vault === 'true';\n    const {billingAddress} = billing;\n    const {\n        onPaymentSetup,\n        onCheckoutFail,\n        onCheckoutValidation\n    } = eventRegistration;\n    const {responseTypes, noticeContexts} = emitResponse;\n    const [buttonsContainer, setButtonsContainer] = useState();\n    const {createErrorNotice} = dispatch('core/notices');\n\n    useBreakpointWidth({width: 375, node: buttonsContainer});\n\n    if (!isExpress) {\n        onError = useCallback((error) => {\n            createErrorNotice(error?.message ? error.message : error, {\n                context: noticeContexts.PAYMENTS\n            });\n        }, []);\n    }\n\n    const setButtonContainerRef = useCallback(el => {\n        setButtonsContainer(el?.parentElement?.parentElement);\n    }, []);\n\n    const {\n        paymentData,\n        setPaymentData,\n        clearPaymentData\n    } = useProcessPayment({\n        isExpress,\n        onSubmit,\n        billingAddress,\n        shippingData,\n        onPaymentSetup,\n        responseTypes,\n        activePaymentMethod,\n        paymentMethodId\n    });\n\n    useProcessPaymentFailure({\n        event: onCheckoutFail,\n        responseTypes,\n        messageContext: noticeContexts.PAYMENTS,\n        setPaymentData\n    });\n\n    useValidateCheckout({\n        isExpress,\n        onCheckoutValidation,\n        paymentData\n    });\n\n    const paypal = useLoadPayPalScript(queryParams);\n\n    const {getOptions} = usePayPalOptions({\n        isExpress,\n        paypal,\n        vault,\n        intent: queryParams.intent,\n        buttonStyles: data('buttons'),\n        billing,\n        shippingData,\n        eventRegistration,\n        setError: onError,\n        setPaymentData,\n        onClick,\n        onClose\n    });\n    const sources = usePayPalFundingSources({\n        data,\n        paypal,\n        context,\n        vault\n    });\n\n    useEffect(() => {\n        const paymentData = data('paymentData');\n        if (paymentData && paymentData.order) {\n            setPaymentData(paymentData, false);\n        }\n    }, []);\n\n    if (!isExpress && paymentData) {\n        if (paymentData.billingTokenData) {\n            return (\n                <PaymentMethodCard\n                    description={paymentData.billingTokenData.payer_info.email}\n                    icon={data('icons').find(icon => icon.id === 'paypal_simple')}\n                    label={i18n.cancel}\n                    onCancel={clearPaymentData}/>\n            );\n        }\n        return (\n            <PaymentMethodCard\n                description={paymentData.order.payer.email_address}\n                icon={data('icons').find(icon => icon.id === 'paypal_simple')}\n                label={i18n.cancel}\n                onCancel={clearPaymentData}/>\n        )\n    }\n    if (paypal && sources) {\n        const Button = paypal.Buttons.driver(\"react\", {React, ReactDOM});\n        const BUTTONS = sources.map(source => {\n            const options = getOptions(source);\n            const button = paypal.Buttons(options);\n            return button.isEligible() ? <Button key={source} {...options}/> : null;\n        });\n        return (\n            <div className='wc-ppcp-paypal__buttons' ref={setButtonContainerRef}>\n                {BUTTONS}\n            </div>\n        );\n    }\n    return null;\n}\n\nconst PaymentMethodLabel = ({components, title, icons, id}) => {\n    if (!Array.isArray(icons)) {\n        icons = [icons];\n    }\n    const {PaymentMethodLabel: Label, PaymentMethodIcons} = components;\n    return (\n        <div className={`wc-ppcp-blocks-payment-method__label ${id}`}>\n            <Label text={title}/>\n            <PaymentMethodIcons icons={icons}/>\n        </div>\n    )\n};\n\nif (!isAdminOnly() && ((isCartPage() && isCartEnabled()) || (isCheckoutPage() && isExpressEnabled()))) {\n    let context = 'express_checkout';\n    if (isCartPage()) {\n        context = 'cart';\n    }\n    registerExpressPaymentMethod({\n        name: 'paymentplugins_ppcp_express',\n        canMakePayment: () => true,\n        content: <ExpressPaymentMethod context={context}/>,\n        edit: <ExpressPaymentMethod context={context}/>,\n        supports: {\n            features: data('features')\n        }\n    });\n}\n\nif (!isAdminOnly() && isCheckoutPage()) {\n    if (data('placeOrderButtonEnabled')) {\n        registerPaymentMethod({\n            name: 'ppcp',\n            label: <PaymentMethodLabel\n                id='ppcp'\n                title={data('title')}\n                icons={data('icons').find(icon => icon.id === 'paypal')}/>,\n            ariaLabel: 'PayPal',\n            canMakePayment: () => true,\n            content: <SimplePayPal data={data}/>,\n            edit: <SimplePayPal data={data}/>,\n            placeOrderButtonLabel: data('i18n').buttonLabel,\n            supports: {\n                showSavedCards: false,\n                showSaveOption: false,\n                features: data('features')\n            }\n        });\n    } else {\n        registerPaymentMethod({\n            name: 'ppcp',\n            label: <PaymentMethodLabel\n                id='ppcp'\n                title={data('title')}\n                icons={data('icons').find(icon => icon.id === 'paypal')}/>,\n            ariaLabel: 'PayPal',\n            canMakePayment: () => true,\n            content: <PayPalPaymentMethod context={'checkout'} paymentMethodId={'ppcp'}/>,\n            edit: <PayPalPaymentMethod context={'checkout'} paymentMethodId={'ppcp'}/>,\n            supports: {\n                showSavedCards: false,\n                showSaveOption: false,\n                features: data('features')\n            }\n        });\n    }\n}\n\n\n\n","import {useEffect} from '@wordpress/element';\nimport {i18n} from '../../../../utils';\n\nexport const useValidateCheckout = (\n    {\n        isExpress,\n        paymentData,\n        onCheckoutValidation\n    }) => {\n    useEffect(() => {\n        if (!isExpress) {\n            const unsubscribe = onCheckoutValidation(() => {\n                // validate that the order has been created.\n                if (!paymentData?.orderId) {\n                    return {\n                        type: 'failure',\n                        errorMessage: i18n.order_button_click\n                    }\n                }\n                return true;\n            });\n            return unsubscribe;\n        }\n    }, [isExpress, paymentData]);\n}","import {useEffect, useState} from \"@wordpress/element\";\nimport {loadPayPalSdk} from \"@ppcp/utils\";\n\n/*\n'client-id': this.getClientId(),\n'components': this.settings?.components,\n'currency': this.getOption('currency'),\n'intent': this.getOption('intent'),\n'vault': this.getOption('vault')\n */\n\n/**\n *\n * @param params - client-id, components, currency, intent, vault\n * @returns {*}\n */\nexport const useLoadPayPalScript = (params) => {\n    const [paypal, setPayPal] = useState(null);\n\n    useEffect(() => {\n        if (!paypal) {\n            loadPayPalSdk(params).then(paypal => setPayPal(paypal));\n        }\n    }, [paypal]);\n\n    return paypal;\n}","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["PaymentMethodCard","_ref","label","icon","description","onCancel","React","createElement","className","alt","src","onClick","getRestPath","path","_getSetting","_getSetting$ajaxRestP","replace","getSetting","ajaxRestPath","isCartPage","context","isCheckoutPage","isAdminOnly","adminOnly","DEFAULT_SHIPPING_ADDRESS","DEFAULT_BILLING_ADDRESS","_objectSpread","i18n","useProcessPaymentFailure","event","responseTypes","_ref$messageContext","messageContext","setPaymentData","useEffect","unsubscribe","data","_data$processingRespo","_data$processingRespo2","processingResponse","paymentDetails","ppcpErrorMessage","message","type","ERROR","retry","PayPalRedirectNotice","eventRegistration","activePaymentMethod","emitResponse","onPaymentSetup","_objectWithoutProperties","_excluded","onCheckoutFail","noticeContexts","_useState2","useState","paymentData","clearPaymentData","useCallback","CHECKOUT","_paymentData$orderId","orderId","_paymentData$billingT","billingToken","response","meta","paymentMethodData","ppcp_paypal_order_id","ppcp_billing_token","SUCCESS","order","billingTokenData","payer_info","email","find","id","cancel","payer","email_address","dangerouslySetInnerHTML","__html","redirectText","props","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","target","source","_defineProperty","getOwnPropertyDescriptors","defineProperties","usePayPalOptions","isExpress","paypal","vault","buttonStyles","shippingData","billing","setError","onClose","currentShippingData","useRef","currentBilling","currentData","buttonState","actions","current","disable","getOptions","fundingSource","_currentShippingData$","needsShipping","options","shippingAddress","billingData","style","getButtonStyle","onApprove","onError","order_missing_address","order_missing_billing_address","onInit","isCheckoutFlow","createOrder","onShippingChange","createBillingAgreement","styles","FUNDING","PAYPAL","PAYLATER","paylater","CREDIT","color","includes","CARD","card","tagline","layout","VENMO","venmo","handleBillingToken","_ref2","_callee","_context","apiFetch","concat","t0","_x","_ref3","_callee2","_context2","orderID","get","_x2","_x3","_data$selected_shippi","setSelectedRates","intermediateAddress","convertPayPalAddressToCart","shipping_address","selectedShippingOption","selected_shipping_option","url","order_id","address","shipping_method","extractShippingMethod","payment_method","code","finally","match","SHIPPING_OPTION_REGEX","packageIdx","extractShippingRateParams","_error$message","indexOf","_currentData$current$","errors","_ref4","_callee3","_currentShippingData$2","_currentBilling$curre","billingAddress","_context3","address_provided","checkout_blocks","shipping_first_name","first_name","shipping_last_name","last_name","shipping_address_1","address_1","shipping_address_2","address_2","shipping_postcode","postcode","shipping_city","city","shipping_state","shipping_country","country","billing_first_name","billing_last_name","billing_address_1","billing_address_2","billing_postcode","billing_city","billing_state","billing_country","billing_email","billing_phone","phone","billing_company","company","_x4","_x5","_currentShippingData$3","_currentBilling$curre2","token","getData","defaultValue","ExpressPaymentMethod","_ref$context","PayPalPaymentMethod","_extends","paymentMethodId","_ref2$isExpress","onSubmit","queryParams","_excluded2","onCheckoutValidation","buttonsContainer","setButtonsContainer","createErrorNotice","dispatch","width","node","_ref$className","_slicedToArray","window","innerWidth","windowWidth","setWindowWidth","_useState4","element","setElement","handleResize","addEventListener","removeEventListener","clientWidth","classList","add","remove","useBreakpointWidth","PAYMENTS","setButtonContainerRef","el","_el$parentElement","parentElement","_useProcessPayment","updatePaymentData","currentPaymentData","currentBillingAddress","submit","isEmpty","convertOrderDataToAddress","_order$payer","_order$payer$address","_order$purchase_units","_order$purchase_units2","_order$payer2","_order$payer3","_order$payer4","_order$payer4$phone","_order$payer4$phone$p","address_line_1","purchase_units","shipping","extractName","phone_number","national_number","convertBillingTokenToAddress","_data$payer_info2","_data$payer_info3","_data$payer_info4","_data$payer_info5","_data$payer_info","billing_address","Array","isArray","_name","given_name","surname","convertShippingAddress","_order$purchase_units3","_order$purchase_units4","_shipping$name","full_name","extractFullName","_currentPaymentData$c","_currentPaymentData$c2","_currentPaymentData$c3","useProcessPayment","errorMessage","order_button_click","useValidateCheckout","params","setPayPal","loadPayPalSdk","useLoadPayPalScript","intent","sources","_ref$vault","setSources","buttonOrder","sort","a","b","usePayPalFundingSources","Button","Buttons","driver","ReactDOM","BUTTONS","map","isEligible","ref","PaymentMethodLabel","components","title","icons","Label","PaymentMethodIcons","text","_i","_sections","isExpressEnabled","registerExpressPaymentMethod","canMakePayment","content","edit","supports","features","registerPaymentMethod","ariaLabel","SimplePayPal","placeOrderButtonLabel","buttonLabel","showSavedCards","showSaveOption","classNames","classes","appendClass","parseValue","toString","newClass","module","default"],"sourceRoot":""}